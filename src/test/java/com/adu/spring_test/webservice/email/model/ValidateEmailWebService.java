package com.adu.spring_test.webservice.email.model;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * <a href="http://www.webxml.com.cn/" target="_blank">WebXml.com.cn</a> <strong>Email地址验证 WEB 服务</strong>，通过查找给定的电子邮件域的邮件服务器和通过向邮件服务器发送数据来判断电子邮件地址正确与否。此Email地址验证Web Service请不要用于任何商业目的，若有需要请<a href="http://www.webxml.com.cn/zh_cn/contact_us.aspx" target="_blank">联系我们</a>，欢迎技术交流。 QQ：8409035<br /><strong>使用本站 WEB 服务请注明或链接本站：http://www.webxml.com.cn/ 感谢大家的支持</strong>！<br /><br />&nbsp;
 *
 * This class was generated by Apache CXF 3.1.5
 * 2016-03-15T20:40:01.365+08:00
 * Generated source version: 3.1.5
 * 
 */
@WebServiceClient(name = "ValidateEmailWebService", 
                  wsdlLocation = "http://www.webxml.com.cn/WebServices/ValidateEmailWebService.asmx?wsdl",
                  targetNamespace = "http://WebXml.com.cn/") 
public class ValidateEmailWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://WebXml.com.cn/", "ValidateEmailWebService");
    public final static QName ValidateEmailWebServiceSoap = new QName("http://WebXml.com.cn/", "ValidateEmailWebServiceSoap");
    public final static QName ValidateEmailWebServiceSoap12 = new QName("http://WebXml.com.cn/", "ValidateEmailWebServiceSoap12");
    public final static QName ValidateEmailWebServiceHttpGet = new QName("http://WebXml.com.cn/", "ValidateEmailWebServiceHttpGet");
    public final static QName ValidateEmailWebServiceHttpPost = new QName("http://WebXml.com.cn/", "ValidateEmailWebServiceHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://www.webxml.com.cn/WebServices/ValidateEmailWebService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ValidateEmailWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://www.webxml.com.cn/WebServices/ValidateEmailWebService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ValidateEmailWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ValidateEmailWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ValidateEmailWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ValidateEmailWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ValidateEmailWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ValidateEmailWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ValidateEmailWebServiceSoap
     */
    @WebEndpoint(name = "ValidateEmailWebServiceSoap")
    public ValidateEmailWebServiceSoap getValidateEmailWebServiceSoap() {
        return super.getPort(ValidateEmailWebServiceSoap, ValidateEmailWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ValidateEmailWebServiceSoap
     */
    @WebEndpoint(name = "ValidateEmailWebServiceSoap")
    public ValidateEmailWebServiceSoap getValidateEmailWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(ValidateEmailWebServiceSoap, ValidateEmailWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns ValidateEmailWebServiceSoap
     */
    @WebEndpoint(name = "ValidateEmailWebServiceSoap12")
    public ValidateEmailWebServiceSoap getValidateEmailWebServiceSoap12() {
        return super.getPort(ValidateEmailWebServiceSoap12, ValidateEmailWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ValidateEmailWebServiceSoap
     */
    @WebEndpoint(name = "ValidateEmailWebServiceSoap12")
    public ValidateEmailWebServiceSoap getValidateEmailWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(ValidateEmailWebServiceSoap12, ValidateEmailWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns ValidateEmailWebServiceHttpGet
     */
    @WebEndpoint(name = "ValidateEmailWebServiceHttpGet")
    public ValidateEmailWebServiceHttpGet getValidateEmailWebServiceHttpGet() {
        return super.getPort(ValidateEmailWebServiceHttpGet, ValidateEmailWebServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ValidateEmailWebServiceHttpGet
     */
    @WebEndpoint(name = "ValidateEmailWebServiceHttpGet")
    public ValidateEmailWebServiceHttpGet getValidateEmailWebServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(ValidateEmailWebServiceHttpGet, ValidateEmailWebServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns ValidateEmailWebServiceHttpPost
     */
    @WebEndpoint(name = "ValidateEmailWebServiceHttpPost")
    public ValidateEmailWebServiceHttpPost getValidateEmailWebServiceHttpPost() {
        return super.getPort(ValidateEmailWebServiceHttpPost, ValidateEmailWebServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ValidateEmailWebServiceHttpPost
     */
    @WebEndpoint(name = "ValidateEmailWebServiceHttpPost")
    public ValidateEmailWebServiceHttpPost getValidateEmailWebServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(ValidateEmailWebServiceHttpPost, ValidateEmailWebServiceHttpPost.class, features);
    }

}
